import os

import pandas as pd
import telebot
from dotenv import load_dotenv

import logger
from db import DB

load_dotenv()


bot = telebot.TeleBot(os.environ.get("TOKEN"))

logger = logger.get_logger(__name__)

db = DB()


def validate_file_format(message: telebot.types.Message, file_name: str):
    """–í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ —Ñ–∞–π–ª–∞."""

    splited_file_name = file_name.split(".")
    file_format = splited_file_name[-1]
    if file_format not in ("xls", "xlsx"):
        bot.send_message(
            message.chat.id, "–ó–∞–≥—Ä—É–∂–∞–π—Ç–µ —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª —Ñ–æ—Ä–º–∞—Ç–∞ .xls –∏–ª–∏ .xlsx"
        )
        bot.send_sticker(
            message.chat.id,
            "CAACAgIAAxkBAAIHeGMDlpzna-do-60_q6wwtYVqazPZAAJx9gEAAWOLRgy2C5NzsjO0bCkE",
        )
        raise ValueError("–§–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞ –Ω–µ .xls –∏–ª–∏ .xlsx")


def send_pretty_df(df: pd.core.frame.DataFrame):
    """–ü—Ä–∏–≤–æ–¥–∏—Ç –æ–±—ä–µ–∫—Ç pandas.Dataframe –≤ —É–¥–æ–±–æ—á–∏—Ç–∞–µ–º—ã–π –≤–∏–¥."""

    message = "–î–∞–Ω–Ω—ã–µ –∏–∑ –≤–∞—à–µ–≥–æ —Ñ–∞–π–ª–∞!"
    if df.empty == False:
        for i in range(len(df)):
            message = (
                message
                + "\n\n NAME: "
                + str((df["NAME"].iloc[i]))
                + "\n URL: "
                + str((df["URL"].iloc[i]))
                + "\n XPATH: "
                + str((df["XPATH"].iloc[i]))
            )
    return message


@bot.message_handler(commands=["start"])
def start_callback(message: telebot.types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start."""

    bot.send_sticker(
        message.chat.id,
        "CAACAgIAAxkBAAIHdmMDg_YLHITGY9_5PnLRA_92qiCvAAJ6AAPluQgavXvp8xtDHoApBA",
    )
    bot.send_message(
        message.chat.id,
        "–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ—Ç –±–æ—Ç –º–æ–∂–µ—Ç –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ç–≤–æ–π Excel –¥–æ–∫—É–º–µ–Ω—Ç –∏ –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–±–µ –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ!",
    )
    bot.send_message(
        message.chat.id, "–ù–∞–∂–º–∏ –Ω–∞ —Å–∫—Ä–µ–ø–∫—É üìé —á—É—Ç—å –Ω–∏–∂–µ, —á—Ç–æ-–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–Ω–µ —Ñ–∞–π–ª!"
    )


@bot.message_handler(content_types=["document"])
def document_callback(message: telebot.types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞.
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ñ–∞–π–ª –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é user_files_storage/.
    –ß–∏—Ç–∞–µ—Ç —Ñ–∞–π–ª –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–∂–µ—Ä–∂–∏–º–æ–µ –≤ —á–∞—Ç.
    –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ –ë–î."""

    file_name = message.document.file_name
    file_info = bot.get_file(message.document.file_id)
    downloaded_file = bot.download_file(file_info.file_path)

    validate_file_format(message, file_name)

    with open("user_files_storage/" + file_name, "wb") as new_file:
        new_file.write(downloaded_file)

    df = pd.read_excel(downloaded_file, header=None, names=["NAME", "URL", "XPATH"])
    pretty_df = send_pretty_df(df)
    bot.send_message(message.chat.id, pretty_df, disable_web_page_preview=True)

    try:
        df.to_sql("data_from_users_xls", db.conn, if_exists="append", index=False)
        bot.send_message(message.chat.id, "–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –ë–î!")
    except Exception as e:
        logger.exception(e)
        bot.send_message(
            message.chat.id, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –¥–æ—é–∞–≤–ª–µ–Ω—ã –≤ –ë–î!"
        )


def run_bot():
    logger.debug("Start")
    try:
        bot.infinity_polling()
    except Exception as e:
        logger.exception(e)


run_bot()
